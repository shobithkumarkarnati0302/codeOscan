
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes the time and space complexity of a given code snippet.
 *
 * - analyzeCodeComplexity - A function that takes code as input and returns its time and space complexity.
 * - AnalyzeCodeComplexityInput - The input type for the analyzeCodeComplexity function.
 * - AnalyzeCodeComplexityOutput - The return type for the analyzeCodeComplexity function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeCodeComplexityInputSchema = z.object({
  language: z.string().describe('The programming language of the code snippet.'),
  code: z.string().describe('The code snippet to analyze.'),
  title: z.string().describe('The title of the code snippet.'),
  inputSizeN: z.string().optional().describe('Optional. The expected input size (e.g., "n", "1000") to help tailor complexity analysis.'),
});

export type AnalyzeCodeComplexityInput = z.infer<typeof AnalyzeCodeComplexityInputSchema>;

const AnalyzeCodeComplexityOutputSchema = z.object({
  timeComplexity: z.string().describe('The time complexity of the code snippet.'),
  spaceComplexity: z.string().describe('The space complexity of the code snippet.'),
  explanation: z.string().describe('A brief explanation of the time and space complexity.'),
});

export type AnalyzeCodeComplexityOutput = z.infer<typeof AnalyzeCodeComplexityOutputSchema>;

export async function analyzeCodeComplexity(
  input: AnalyzeCodeComplexityInput
): Promise<AnalyzeCodeComplexityOutput> {
  return analyzeCodeComplexityFlow(input);
}

const analyzeCodeComplexityPrompt = ai.definePrompt({
  name: 'analyzeCodeComplexityPrompt',
  input: {schema: AnalyzeCodeComplexityInputSchema},
  output: {schema: AnalyzeCodeComplexityOutputSchema},
  prompt: `You are an expert software engineer specializing in code analysis.

  Analyze the time and space complexity of the given code snippet. Provide a brief explanation of your analysis.
  {{#if inputSizeN}}
  Consider the expected input size (n) to be: {{{inputSizeN}}}.
  {{/if}}

  Language: {{{language}}}
  Title: {{{title}}}
  Code:
  \`\`\`{{{language}}}
  {{{code}}}
  \`\`\`

  Respond in a ordered paragraph. Give time complexity as 1) and space complexity as 2). Provide a brief explanation of the time and space complexity.
  `,
});

const analyzeCodeComplexityFlow = ai.defineFlow(
  {
    name: 'analyzeCodeComplexityFlow',
    inputSchema: AnalyzeCodeComplexityInputSchema,
    outputSchema: AnalyzeCodeComplexityOutputSchema,
  },
  async input => {
    const {output} = await analyzeCodeComplexityPrompt(input);
    return output!;
  }
);

